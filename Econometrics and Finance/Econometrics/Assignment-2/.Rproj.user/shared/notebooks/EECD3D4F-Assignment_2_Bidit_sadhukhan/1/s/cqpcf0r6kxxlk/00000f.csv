"0","# Define data and smoothing parameters"
"0","data <- actual_values"
"0","alpha_values <- c(0.1, 0.3)"
"0",""
"0","# Initialize empty lists for storing errors"
"0","mse_errors <- list()"
"0",""
"0","# Loop through each smoothing parameter"
"0","for (alpha in alpha_values) {"
"0","  # Initialize forecast and error variables"
"0","  forecast <- c(data[1])"
"0","  errors <- vector(""numeric"", length(data))"
"0",""
"0","  # Calculate forecasts for remaining data points"
"0","  for (i in 2:length(data)) {"
"0","    forecast[i] <- alpha * data[i-1] + (1 - alpha) * forecast[i-1]"
"0","    errors[i] <- data[i] - forecast[i]"
"0","  }"
"0",""
"0","  # Calculate mean squared error"
"0","  mse_error <- mean(errors^2)"
"0","  "
"0","  # Store MSE error"
"0","  mse_errors[[paste0(""alpha = "", alpha)]] <- mse_error"
"0","}"
"0",""
"0","# Find the alpha with the minimum MSE"
"0","min_mse_index <- which.min(unlist(mse_errors))"
"0","optimal_alpha <- names(mse_errors)[min_mse_index]"
